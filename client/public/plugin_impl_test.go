/*** This is an autogenerated file; This file can be edited but changes should be saved***/

package generator

import (
	"github.com/ligato/cn-infra/db/keyval"
	"github.com/ligato/cn-infra/infra"
	"github.com/ligato/cn-infra/logging"
	"github.com/ligato/osseus/plugins/generator/descriptor"

	"github.com/ligato/osseus/plugins/generator/gencalls"
	kvs "github.com/ligato/vpp-agent/plugins/kvscheduler/api"
)

// Plugin holds the internal data structures of the Generator Plugin
type Plugin struct {
	Deps

	// Generator handlers
	genHandler gencalls.ProjectAPI
}

// Deps represent Plugin dependencies.
type Deps struct {
	infra.PluginDeps
	KVStore     keyval.KvProtoPlugin
	KVScheduler kvs.KVScheduler
}

// Init initializes the Generator Plugin
func (p *Plugin) Init() error {
	p.Log.SetLevel(logging.DebugLevel)

	// Init handlers
	p.genHandler = gencalls.NewProjectHandler(p.Log, p.KVStore)

	// Init & register descriptors
	pluginDescriptor := descriptor.NewProjectDescriptor(p.Log, p.genHandler)
	err := p.KVScheduler.RegisterKVDescriptor(pluginDescriptor)
	if err != nil {
		return err
	}
	p.Log.Info("Project descriptor registered")

	templateDescriptor := descriptor.NewTemplateDescriptor(p.Log)
	err = p.KVScheduler.RegisterKVDescriptor(templateDescriptor)
	if err != nil {
		return err
	}
	p.Log.Info("Template descriptor registered")

	return nil
}

// AfterInit is NOOP
func (p *Plugin) AfterInit() (err error) {
	return nil
}

// Close stops all associated go routines & channels
func (p *Plugin) Close() error {
	return nil
}